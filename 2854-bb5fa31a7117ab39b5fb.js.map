{"version":3,"file":"2854-bb5fa31a7117ab39b5fb.js","mappings":"0KAIO,MAAMA,EAAiBC,IAAuE,IAAtE,WAAEC,GAAiD,EAC9E,MAAM,iBAAEC,EAAgB,MAAEC,EAAK,QAAEC,GAAYH,GAEvC,EAACI,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,WAAS,GA0B3C,OAfAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAA2BC,MAAMC,KAAKC,SAASC,iBAAiB,yBAElEJ,EAAUK,OAAS,GACnBL,EAAUM,SAASC,IACcA,EAAIC,aAAa,cAA9C,MAEMC,EAA0BF,EAAIC,aAAa,cAC7C,OAASC,GAAY,OAASF,EAAIG,cAAc,YAChDH,EAAIG,cAAc,UAAUC,UAAS,aAAgBF,EAAQ,OACjE,GAER,GACD,IAGCG,EAAAA,cAAAA,EAAAA,SAAAA,MACOlB,GAASC,EAAQU,OAAS,IACzBO,EAAAA,cAAAA,UAAAA,CAASC,UAAU,oCACfD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eACW,KAArBpB,IAAgD,IAArBA,GACxBmB,EAAAA,cAAAA,MAAAA,CAAKE,QAAQ,OAAOC,OAAQtB,EAAiBuB,IAAKC,IAAI,gBAG9DL,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACXD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mBACXD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACRnB,GACCkB,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,iBAAiBK,wBAAyB,CAACC,OAAQzB,KAElEC,EAAQU,OAAS,GAChBO,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kBACTlB,EAAQyB,KAAI,CAACC,EAAMC,KAChBD,EAAKE,MAAQF,EAAKG,aACfZ,EAAAA,cAAAA,MAAAA,CACIC,UAAS,gDAAkDS,EAC3DG,GAAE,uBAAyBH,EAE3B,+BAA8BA,EAC9BI,IAAKJ,GACLV,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yBAAyBc,QAAS,IAjD9EL,KAAmB,IAAD,IACjCzB,GAAcD,GACdO,SAASO,cAAc,QAASkB,UAAUC,IAAI,kBAEY,QAAtD,EAAA1B,SAASO,cAAc,wBAAyBY,UAAM,OAAtDQ,EAAwDF,UAAUC,IAAI,gBACrB,QAAjD,EAAA1B,SAASO,cAAc,mBAAoBY,UAAM,OAAjDS,EAAmDH,UAAUC,IAAI,eAAe,EA4CeG,CAAUV,IAC7DV,EAAAA,cAAAA,KAAAA,KACOS,EAAKE,KAAKlB,OAAS,GAClBgB,EAAKE,KAAKH,KAAI,CAACG,EAAMD,KAChBC,EAAKU,OAASV,EAAKW,OAChBtB,EAAAA,cAAAA,EAAAA,SAAAA,KACKW,EAAKW,KACNtB,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,SACK,IAAdU,EAAKU,QAA8B,IAAfV,EAAKU,OACxBrB,EAAAA,cAAAA,MAAAA,CAAKE,QAAQ,OAAOC,OAAQQ,EAAKU,MAAMjB,IAAKC,IAAKM,EAAKW,YAO/Eb,EAAKG,YACJZ,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cAAcQ,EAAKG,YAEtCZ,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,mDAAkD,sBAWjH,EAIX,W","sources":["webpack://zipcode/./src/components/blocks/custom/ProjectsBanner.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./projects-banner.sass\";\nimport { IProjectsBannerProps } from \"../types\";\n\nexport const ProjectsBanner = ({ attributes }: { attributes: IProjectsBannerProps}): JSX.Element => {\n    const { background_image, label, content } = attributes;\n\n    const [openPopUp, setOpenPopUp] = useState(false);\n    \n    const openPopup = (index: number) => {\n        setOpenPopUp(!openPopUp);\n        document.querySelector('html')!.classList.add('active-overlay');\n        // setTimeout(() => {\n            document.querySelector('.projects-popup-item-'+ index)?.classList.add('active-popup');\n            document.querySelector('.projects-popup-'+ index)?.classList.add('active-popup');\n        // }, 300);\n    }   \n\n    useEffect(() => {\n        const modalBtns: HTMLElement[] = Array.from(document.querySelectorAll(\".projects-popup-item\"));\n\n        if (modalBtns.length > 0) {\n            modalBtns.forEach((btn: HTMLElement) => {\n                const modal: string | null = btn.getAttribute('data-popup');\n\n                const imageUrl: string | null = btn.getAttribute('data-image');\n                if (null !== imageUrl && null !== btn.querySelector('.image')) {\n                    btn.querySelector('.image').innerHTML = `<img src=\"${imageUrl}\" />`;\n                }\n            });\n        }\n    }, [])\n\n    return (\n        <>\n            { (label || content.length > 0 ) && \n                <section className=\"projects-banner projects-section\">\n                    <div className=\"section-bkg\">\n                        {background_image !== \"\" && background_image !== false && (\n                            <img loading=\"lazy\" srcSet={background_image.src} alt=\"background\" />\n                        )}\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"section-content\">\n                            <div className=\"content-inner\">\n                                { (label) && \n                                    <h1 className=\"title h5 small\" dangerouslySetInnerHTML={{__html: label}} />\n                                }\n                                { (content.length > 0) && \n                                    <div className=\"projects-items\">\n                                        { content.map((list, index) => (\n                                            (list.line || list.small_text) && \n                                                <div\n                                                    className={`item projects-popup-item projects-popup-item-${index}`} \n                                                    id={`projects-popup-item-${index}`} \n                                                    // data-image={`${list.imgUrl}`} \n                                                    data-popup={`projects-popup-${index}`} \n                                                    key={index}>\n                                                    <div className=\"item-inner text-center\" onClick={() => openPopup(index)}>\n                                                        <h3>\n                                                            { (list.line.length > 0 ) && \n                                                                list.line.map((line, index) => (\n                                                                    (line.image || line.text) && \n                                                                        <>\n                                                                            {line.text}\n                                                                            <span className=\"image\">\n                                                                                { (line.image != \"\" && line.image !== false) && \n                                                                                    <img loading=\"lazy\" srcSet={line.image.src} alt={line.text} />\n                                                                                }\n                                                                            </span>\n                                                                        </>\n                                                                ))\n                                                            }\n                                                        </h3>\n                                                        { (list.small_text ) && \n                                                            <div className=\"subheading\">{list.small_text}</div>\n                                                        }\n                                                        <button className=\"btn btn-secondary visible-tablet visible-mobile\">Read more</button>\n                                                    </div>\n                                                </div>\n                                        ))}\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            }\n        </>\n    );\n}\n\nexport default ProjectsBanner;\n"],"names":["ProjectsBanner","_ref","attributes","background_image","label","content","openPopUp","setOpenPopUp","useState","useEffect","modalBtns","Array","from","document","querySelectorAll","length","forEach","btn","getAttribute","imageUrl","querySelector","innerHTML","React","className","loading","srcSet","src","alt","dangerouslySetInnerHTML","__html","map","list","index","line","small_text","id","key","onClick","classList","add","_document$querySelect","_document$querySelect2","openPopup","image","text"],"sourceRoot":""}